<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
  <title>set_trace_func</title>
  <subtitle>blog.tracefunc.com</subtitle>
  <link href="http://blog.tracefunc.com/" rel="self" />
  <link href="http://blog.tracefunc.com/" />
  <updated>2009-12-01T21:43:24-05:00</updated>
  <author>
    <name>Jamie Macey</name>
    <email>jamie.blog@tracefunc.com</email>
  </author>
  <id>http://blog.tracefunc.com/</id>
  
  <entry>
    <title>Hoptoad v2 in Merb</title>
    <link href="http://blog.tracefunc.com/2009/12/01/hoptoad-v2-in-merb/" />
    <id>tag:blog.tracefunc.com,2009-12-01T00:00:00-05:00:1259720641</id>
    <updated>2009-12-01T21:24:01-05:00</updated>
    <content type="html">&lt;p&gt;&lt;a href=&quot;http://hoptoadapp.com&quot;&gt;Hoptoad&lt;/a&gt; has been bugging us for a week or two now to upgrade to v2 of its API, so we did that this week for our project at work. Except we're running Merb, not Rails.&lt;/p&gt;

&lt;p&gt;Previously, we've been using Atmos' &lt;a href=&quot;http://github.com/atmos/merb_hoptoad_notifier&quot;&gt;merb_hoptoad plugin&lt;/a&gt;, but it looks like it's been abandoned now in favor of a rack handler, and we needed to hack it a bit to support running multiple sites (with different API keys) off our single codebase. I'm always happy throwing code away, though, so I thought I'd try using the official &lt;a href=&quot;http://github.com/thoughtbot/hoptoad_notifier&quot;&gt;Hoptoad Notifier plugin&lt;/a&gt; and see how hard it is to get working. It wasn't.&lt;/p&gt;

&lt;p&gt;First, you probably want to make a gem of the plugin. &lt;a href=&quot;http://github.com/thoughtbot/hoptoad_notifier&quot;&gt;I forked it&lt;/a&gt; a few days back, and just added a jeweller task to create the gem locally. Install in the local gems directory (or system-wide in production if you want to do it the hard way) and add it as a dependency.&lt;/p&gt;

&lt;p&gt;Then, to actually use it, just add the following in the right places:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# init.rb, in Merb::Bootloader.after_app_loads

HoptoadNotifier.configure do |config|
  config.api_key = '...'
  config.environment_name = Merb.env
  config.project_root = Merb.root
  # See http://github.com/thoughtbot/hoptoad_notifier/ README.rdoc
  # for other config settings. You probably want to think about
  # params_filters and maybe ignore.
end

# application.rb, if you want available manually.
# If you just want it for completely unexpected errors you can stick it in
# exceptions.rb instead

def notify_hoptoad(error=nil)
  error ||= request.exceptions.first

  data = {
    :controller       =&amp;gt; params[:controller],
    :action           =&amp;gt; params[:action],
    :url              =&amp;gt; &quot;#{request.protocol}://#{request.host}#{request.uri}&quot;,
    # Looks like hoptoad is filtering these itself, we don't need to worry about it
    # other than configuring what needs to be filtered
    :parameters       =&amp;gt; params.to_hash,
    :session_data     =&amp;gt; session.to_hash,
    :cgi_data         =&amp;gt; request.env.to_hash,
    :environment_vars =&amp;gt; ENV.to_hash.merge(:RAILS_ENV =&amp;gt; Merb.env)
  }

  HoptoadNotifier.notify(error, data)
end

# exceptions.rb, override default error handlers to submit to hoptoad

def internal_server_error
  notify_hoptoad
  render
end

def standard_error
  notify_hoptoad
  render
end    

# other spots you handle exceptions inline, just pass in the exception

begin
 ...
rescue =&amp;gt; e
  notify_hoptoad(e)
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It's not exactly as magical as the Rails plugin's auto-including, but it looks like it's getting the job done for us.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Enter Jekyll</title>
    <link href="http://blog.tracefunc.com/2009/11/30/enter-jekyll/" />
    <id>tag:blog.tracefunc.com,2009-11-30T00:00:00-05:00:1259719311</id>
    <updated>2009-12-01T21:01:51-05:00</updated>
    <content type="html">&lt;p&gt;So I've gone and switched up blogging platforms again. This time, it's &lt;a href=&quot;http://github.com/mojombo/jekyll&quot;&gt;Jekyll&lt;/a&gt;. It's not that I had any problems with &lt;a href=&quot;http://github.com/TwP/webby/&quot;&gt;webby&lt;/a&gt;, just thought I'd try it out. After spending a few hours porting things over (mostly layout and helpers, my posts are already in &lt;a href=&quot;http://daringfireball.net/projects/markdown/&quot;&gt;markdown&lt;/a&gt;) I think I'm going to stick with it.&lt;/p&gt;

&lt;p&gt;Being blog-aware is looking like a huge win - if I'm ok with my posts just being recorded by date, rather than date+time, there's a lot less overhead that needs to get done to push a new post up. I have smaller YAML preambles, and the only custom code I'm maintaining is some custom Liquid filters. With less time being spent worrying about the blog software, I might be more successful at the whole blog-writing bit. Maybe.&lt;/p&gt;
</content>
  </entry>
  
</feed>
